(this.webpackJsonpfsui=this.webpackJsonpfsui||[]).push([[25],{100:function(t,o,n){"use strict";var s=n(62);n.n(s).a},101:function(t,o,n){(t.exports=n(15)(!1)).push([t.i,"\n.mgl15 {\n  margin-left: 15px;\n}\n.dialog-prefix {\n  margin: 20px;\n}\n.dialog-close {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  display: inline-block;\n  padding: 6px;\n  color: #999;\n  font-size: 18px;\n}\n.dialog-customer-footer {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-pack: end;\n  -webkit-justify-content: flex-end;\n          justify-content: flex-end;\n  width: 100%;\n}\n.dialog-customer-footer a {\n  margin-right: 25px;\n  color: #e83e43;\n  font-size: 18px;\n}\n",""])},133:function(t,o,n){"use strict";n.r(o);var s=function(){var t=this,o=t.$createElement,n=t._self._c||o;return n("div",[n("fs-group",{attrs:{title:"alert"}},[n("fs-button",{on:{click:function(o){return t.dialog({title:"提示",message:"单行提示"})}}},[t._v("\n        消息提示-单行\n      ")]),n("fs-button",{staticClass:"mgl15",on:{click:function(o){return t.dialog({title:"提示",showCloseIcon:!0,message:"说明当前状态、提示用户解决方案，最好不要超过两行。"})}}},[t._v("\n        消息提示-多行\n      ")])],1),n("fs-group",{attrs:{title:"confirm"}},[n("fs-button",{on:{click:function(o){return t.dialog({type:"confirm",message:"说明当前状态、提示用户解决方案，最好不要超过两行。"})}}},[t._v("确认")]),n("fs-button",{staticClass:"mgl15",on:{click:function(o){return t.dialog({type:"confirm",confirmButtonText:"保存",cancelButtonText:"不保存",title:"提示",message:"消息提示"})}}},[t._v("确认-单行")]),n("fs-button",{staticClass:"mgl15",on:{click:function(o){return t.dialog({type:"confirm",title:"提示",align:"left",message:"说明当前状态、提示用户解决方案，最好不要超过两行。"})}}},[t._v("\n        确认-多行\n      ")])],1),n("fs-group",{attrs:{title:"组件调用"}},[n("fs-button",{on:{click:t.highDialog}},[t._v("消息确认")]),n("fs-button",{staticStyle:{margin:"0 15px"},on:{click:t.prefixDialog}},[t._v("图片前缀")]),n("fs-button",{on:{click:function(o){t.show3=!0}}},[t._v("自定义footer")])],1),n("fs-dialog",{model:{value:t.show,callback:function(o){t.show=o},expression:"show"}},[n("fs-input",{attrs:{label:"用户名",placeholder:"请输入用户名"},model:{value:t.val2,callback:function(o){t.val2=o},expression:"val2"}},[n("span",{staticClass:"fs-input-prefix",attrs:{slot:"prefix"},slot:"prefix"},[n("i",{staticClass:"red"},[t._v("*")])])]),n("fs-input",{attrs:{type:"password"},model:{value:t.val3,callback:function(o){t.val3=o},expression:"val3"}})],1),n("fs-dialog",{attrs:{title:"标题单行",type:"alert",message:"说明当前状态、提示用户解决方案，最好不要超过两行。"},model:{value:t.show2,callback:function(o){t.show2=o},expression:"show2"}},[n("div",{staticClass:"dialog-prefix",attrs:{slot:"prefix"},slot:"prefix"},[n("span",{staticClass:"dialog-close",on:{click:function(o){t.show2=!1}}},[n("fs-icon",{attrs:{name:"error"}})],1),n("img",{attrs:{src:"https://dummyimage.com/600x400/000/fff",alt:"",width:"60%"}})])]),n("fs-dialog",{attrs:{align:"left",showCloseIcon:"",title:"自定义footer",message:"描述文字的字数尽量控制在三行\n内，并且单行最右侧尽量不要是\n标点符号。。"},model:{value:t.show3,callback:function(o){t.show3=o},expression:"show3"}},[n("div",{staticClass:"dialog-customer-footer",attrs:{slot:"footer"},slot:"footer"},[n("a",{on:{click:function(o){o.stopPropagation(),t.show3=!1}}},[t._v("取消")]),n("a",{on:{click:function(o){o.stopPropagation(),t.show3=!1}}},[t._v("确定")])])])],1)};s._withStripped=!0;var i={name:"index",data:function(){return{show:!1,show2:!1,show3:!1,val2:"",val3:""}},methods:{dialog:function(t){this.$dialog(t).then(function(t){console.log("我确定了")}).catch(function(t){console.log("我取消了")})},highDialog:function(){this.show=!0},prefixDialog:function(){this.show2=!0}}},e=(n(100),n(1)),l=Object(e.a)(i,s,[],!1,null,null,null);l.options.__file="packages/dialog/demo/index.vue";o.default=l.exports},62:function(t,o,n){var s=n(101);"string"==typeof s&&(s=[[t.i,s,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};n(19)(s,i);s.locals&&(t.exports=s.locals)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,